#!/usr/bin/env python3
import inspect
import sys
import argparse
import kpimport
import kickpass


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('input', type=argparse.FileType('r'),
                        default=sys.stdin, nargs='?')

    args = parser.parse_args()

    choosen = (0, None)
    importers = [item for _, item in kpimport.__dict__.items()
                 if inspect.isclass(item)
                 and not inspect.isabstract(item)
                 and issubclass(item, kpimport.KickpassImporter)]

    for importer in importers:
        score = importer.magic(args.input)
        if score > choosen[0]:
            choosen = (score, importer)

    if choosen[1] is None:
        raise ValueError("Unknown input")

    args.input.seek(0)
    importer = choosen[1](args.input)

    def prompt(ctx, confirm, prompt):
        return b"master password"

    ctx = kickpass.Context(prompt=prompt)

    for (path, elem) in importer.getsafes():
        safe = kickpass.Safe(ctx, path)
        safe.open(create=True)
        importer.importsafe(ctx, safe, elem)
        print("imported")
        safe.save()
        safe.close()


if __name__ == "__main__":
    main()
